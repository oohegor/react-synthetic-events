{"version":3,"sources":["components/AllClipboard.js","components/ImageEvents.js","components/OnComposition.js","components/OnCopy.js","components/OnCut.js","components/OnFocus.js","components/OnKeyboard.js","components/OnMouse.js","components/OnPaste.js","components/OnPointer.js","components/OnSelect.js","components/UiEvents.js","components/WheelEvents.js","App.js","serviceWorker.js","index.js"],"names":["AllClipboard","useState","eventText","setEentText","eventType","seteventType","isEventFired","setIsEventFired","handleOnCut","e","persist","console","log","type","clipboardData","setTimeout","navigator","clipboard","readText","then","text","catch","err","style","minHeight","className","onCopy","onCut","onPaste","cols","rows","width","defaultValue","color","UiEvents","isErrorEventFired","setIsErrorEventFired","src","setSrc","onLoad","alt","onError","href","target","rel","onCompositionStart","onCompositionUpdate","onCompositionEnd","OnCopy","copiedText","setCopiedText","isCopied","handleOnCopy","a","OnCut","cuttedText","setCuttedText","isCutted","onFocus","onBlur","onKeyDown","onKeyPress","onKeyUp","OnMouse","state","setstate","handleAction","onClick","onContextMenu","onDoubleClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","Object","keys","map","key","String","OnPaste","pastedText","setPastedText","isPasted","OnPointer","onPointerDown","onPointerMove","onPointerUp","onPointerCancel","onGotPointerCapture","onLostPointerCapture","onPointerEnter","onPointerLeave","onPointerOver","onPointerOut","onSelect","onScroll","maxHeight","scrollBehavior","overflow","WheelEvents","onWheel","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5135ea35.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n\tconst [eventText, setEentText] = useState('');\n\tconst [eventType, seteventType] = useState('');\n\tconst [isEventFired, setIsEventFired] = useState(false);\n\n\tconst handleOnCut = e => {\n\t\te.persist();\n\t\tconsole.log({ e });\n\t\tseteventType(e.type);\n\t\tconsole.log('type =>', e.type);\n\t\tconsole.log('type =>', e.clipboardData);\n\t\tconsole.log('type =>', e);\n\t\tsetIsEventFired(true);\n\t\tsetTimeout(() => {\n\t\t\tsetIsEventFired(false);\n\t\t}, 5000);\n\t\tnavigator.clipboard\n\t\t\t.readText()\n\t\t\t.then(text => {\n\t\t\t\t// `text` contains the text read from the clipboard\n\t\t\t\tconsole.log('copied text =>', text);\n\t\t\t\tsetEentText(text);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\t// maybe user didn't grant access to read from clipboard\n\t\t\t\tconsole.log('Something went wrong', err);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div style={{ minHeight: '150px' }}>\n\t\t\t<p className=\"bg-warning p-2\">\n\t\t\t\t<strong>OnCopy, OnCut, OnPaste</strong> Events\n\t\t\t</p>\n\t\t\t<textarea\n\t\t\t\tonCopy={handleOnCut}\n\t\t\t\tonCut={handleOnCut}\n\t\t\t\tonPaste={handleOnCut}\n\t\t\t\tcols={100}\n\t\t\t\trows={5}\n\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\tdefaultValue=\"Paste part or full of this string and see copied text below\"\n\t\t\t/>\n\t\t\t{isEventFired ? (\n\t\t\t\t<p>\n\t\t\t\t\t<span className=\"font-weight-bold\">{eventType}</span> Event fired ->{' '}\n\t\t\t\t\t<span style={{ color: 'red' }}>{eventText}</span>\n\t\t\t\t</p>\n\t\t\t) : null}\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\n\nexport default function UiEvents() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n    const [isErrorEventFired, setIsErrorEventFired] = useState(false);\n    const [src, setSrc] = useState('https://picsum.photos-error/100')\n\n    const handleEvent = (e) => {\n        e.persist();\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    const handleErrorEvent = (e) => {\n        e.persist();\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e);\n        setIsErrorEventFired(true);\n        setTimeout(() => {\n            setIsErrorEventFired(false);\n        }, 5000);\n    };\n\n    const handleErrorImage = () => {\n        setSrc('https://picsum.photos/200');\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-primary p-2\">\n                <strong>Image Events</strong>\n            </p>\n            <p>onLoad onError</p>\n            <div className='text-center'>\n                <img onLoad={handleEvent} src='https://picsum.photos/100' alt='load-event' />\n                {isEventFired ?\n                    (<span className='my-3'>\n                        <span className='font-weight-bol'>{eventType}</span> Event fired\n                </span>) : (null)\n                }\n            </div>\n            <hr />\n            <div className='text-center'>\n                <img onError={handleErrorEvent} src='https://picsum.photos-error/100' alt='error-event' />\n                {isErrorEventFired ?\n                    (<span className='my-3'>\n                        <span className='font-weight-bol'>{eventType}</span> Event fired\n                </span>) : (null)\n                }\n            </div>\n            <hr />\n            <div className='text-center'>\n                <p>On initial load, src image is error image, so onError event will replace new image</p>\n                <img onError={handleErrorImage} src={src} alt='error-event' />\n            </div>\n            <hr />\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('e =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-success p-2\">\n                <strong>Composition Events</strong>\n            </p>\n            <p>Composition events fire for non-latin character typing e.g (Tamil, Chinese, japanese, etc..)</p>\n            <p>onCompositionEnd, onCompositionStart, onCompositionUpdate</p>\n            <div>\n                <a href='https://blog.evanyou.me/2014/01/03/composition-event/'\n                    target='_blank'\n                    rel=\"noopener noreferrer\"\n                >\n                    for more details about composition events click here\n                </a>\n            </div>\n            <div className='text-center'>\n                <img src='https://i.stack.imgur.com/7D5U0.gif' alt='composition-event' />\n            </div>\n            <p>Type non-latin characters to fire the Composition events</p>\n            <input\n                onCompositionStart={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onCompositionStart ஆரம்பம்'\n            />\n            <input\n                onCompositionUpdate={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onCompositionUpdate மாறுதல்கள்'\n            />\n            <input\n                onCompositionEnd={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onCompositionEnd இறுதி'\n            />\n            {isEventFired ?\n                (<p>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnCopy() {\n    const [copiedText, setCopiedText] = useState('');\n    const [isCopied, onCopy] = useState(false);\n\n    const handleOnCopy = async (e) => {\n        console.log('type =>', e.type);\n        onCopy(true);\n        setTimeout(() => {\n            onCopy(false);\n        }, 3000);\n        navigator.clipboard.readText()\n            .then(text => {\n                // `text` contains the text read from the clipboard\n                console.log('copied text =>', text);\n                setCopiedText(text);\n            })\n            .catch(err => {\n                // maybe user didn't grant access to read from clipboard\n                console.log('Something went wrong', err);\n            });\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\"><strong>onCopy</strong> Event</p>\n            <h4 onCopy={handleOnCopy}>Copy part or full of this string and see copied text below</h4>\n            {isCopied ?\n                (<p>Copied Text -> <span style={{ color: 'red' }}>{copiedText}</span></p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnCut() {\n    const [cuttedText, setCuttedText] = useState('');\n    const [isCutted, onCut] = useState(false);\n\n    const handleOnCut = async (e) => {\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        onCut(true);\n        setTimeout(() => {\n            onCut(false);\n        }, 5000);\n        navigator.clipboard.readText()\n            .then(text => {\n                // `text` contains the text read from the clipboard\n                console.log('copied text =>', text);\n                setCuttedText(text);\n            })\n            .catch(err => {\n                // maybe user didn't grant access to read from clipboard\n                console.log('Something went wrong', err);\n            });\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\"><strong>OnCut</strong> Event</p>\n            <input onCut={handleOnCut} type='text' style={{ width: '100%' }} defaultValue='Cut part or full of this string and see copied text below' />\n            {isCutted ?\n                (<p>Cutted Text -> <span style={{ color: 'red' }}>{cuttedText}</span></p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        console.log({ e });\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-primary p-2\">\n                <strong>Focus Events</strong>\n            </p>\n            <p>onFocus, onBlur</p>\n            <input\n                onFocus={handleOnCut}\n                onBlur={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onFocus onBlur events'\n            />\n            {isEventFired ?\n                (<p>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        console.log({ e });\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\">\n                <strong>Keyboard Events</strong>\n            </p>\n            <p>onKeyDown, onKeyPress, onKeyUp</p>\n            <input\n                onKeyDown={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onKeyDown events'\n            />\n            <input\n                onKeyPress={handleOnCut}\n                onKeyUp={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onKeyPress onKeyUp events'\n            />\n            {isEventFired ?\n                (<p>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnMouse() {\n\n    const [state, setstate] = useState({});\n\n    const handleAction = (e) => {\n        console.log({ e });\n        e.persist();\n        setstate(e);\n    };\n    return (\n        <div>\n            <p className=\"bg-success p-2 mt-5\"><strong>onMouse</strong> Event</p>\n            <div>\n                <p className='font-weight-bold'>\n                    List of available mouse events\n                </p>\n                <p>\n                    onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit,\n                    onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave,\n                    onMouseMove, onMouseOut, onMouseOver, onMouseUp\n                </p>\n            </div>\n            <p className='my-3 text-success'>\n                Click/touch below text to trigger mouse events\n            </p>\n\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p onClick={handleAction}>onClick event</p>\n                    <p onContextMenu={handleAction}>onContextMenu event</p>\n                    <p onDoubleClick={handleAction}>onDoubleClick event</p>\n                    <p onDrag={handleAction}>onDrag event</p>\n                    <p onDragEnd={handleAction}>onDragEnd event</p>\n                    <p onDragEnter={handleAction}>onDragEnter event</p>\n                    <p onDragExit={handleAction}>onDragExit event</p>\n                    <p onDragLeave={handleAction}>onDragLeave event</p>\n                    <p onDragOver={handleAction}>onDragOver event</p>\n                    <p onDragStart={handleAction}>onDragStart event</p>\n                    <p onDrop={handleAction}>onDrop event</p>\n                    <p onMouseDown={handleAction}>onMouseDown event</p>\n                    <p onMouseEnter={handleAction}>onMouseEnter event</p>\n                    <p onMouseLeave={handleAction}>onMouseLeave event</p>\n                    <p onMouseMove={handleAction}>onMouseMove event</p>\n                    <p onMouseOut={handleAction}>onMouseOut event</p>\n                    <p onMouseOver={handleAction}>onMouseOver event</p>\n                    <p onMouseUp={handleAction}>onMouseUp event</p>\n                </div>\n                <div className=\"col\">\n                    <table className='table table-bordered table-hover table-condensed table-striped my-3' >\n                        <tbody>\n                            <tr>\n                                <th>Property</th>\n                                <th>Value</th>\n                            </tr>\n                            {Object.keys(state).map(key =>\n                                (typeof (state[key]) !== 'object' && typeof (state[key]) !== 'function') ?\n                                    <tr key={key}>\n                                        <td>{key}</td>\n                                        <td>{String(state[key])}</td>\n                                        {console.log(key, state[key])}\n                                    </tr> : null\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div >\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnPaste() {\n    const [pastedText, setPastedText] = useState('');\n    const [isPasted, OnPaste] = useState(false);\n\n    const handleOnCut = async (e) => {\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        OnPaste(true);\n        setTimeout(() => {\n            OnPaste(false);\n        }, 5000);\n        navigator.clipboard.readText()\n            .then(text => {\n                // `text` contains the text read from the clipboard\n                console.log('copied text =>', text);\n                setPastedText(text);\n            })\n            .catch(err => {\n                // maybe user didn't grant access to read from clipboard\n                console.log('Something went wrong', err);\n            });\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\"><strong>OnPaste</strong> Event</p>\n            <input onPaste={handleOnCut} type='text' style={{ width: '100%' }} defaultValue='Paste part or full of this string and see copied text below' />\n            {isPasted ?\n                (<p>Pasted Text -> <span style={{ color: 'red' }}>{pastedText}</span></p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnPointer() {\n\n    const [state, setstate] = useState({});\n\n    const handleAction = (e) => {\n        console.log({ e });\n        e.persist();\n        setstate(e);\n    };\n    return (\n        <div>\n            <p className=\"bg-success p-2 mt-5\"><strong>onPointer</strong> Event</p>\n            <div className='text-center'>\n                <img src='https://www.w3.org/TR/pointerevents/pointer.png' alt='pointer-event' />\n            </div>\n            <p className='my-3 text-success'>\n                Click/touch below text to trigger pointer events\n            </p>\n            <div\n                onPointerDown={handleAction}\n                onPointerMove={handleAction}\n                onPointerUp={handleAction}\n                onPointerCancel={handleAction}\n                onGotPointerCapture={handleAction}\n                onLostPointerCapture={handleAction}\n                onPointerEnter={handleAction}\n                onPointerLeave={handleAction}\n                onPointerOver={handleAction}\n                onPointerOut={handleAction}\n            >\n                <p>\n                    The Pointer Events API is an HTML5 specification that combines touch, mouse, pen and other inputs into a single unified API.\n                </p>\n                <p>\n                    The simple idea behind it, is that mouse and touch and stylus input events are unified into a single event API.\n                </p>\n                <p className='font-weight-bold'>\n                    List of available pointer events\n                </p>\n                <p>\n                    onPointerDownonPointerMove, onPointerUp, onPointerCancel, onGotPointerCapture,\n                    onLostPointerCapture, onPointerEnter, onPointerLeave, onPointerOver, onPointerOut\n                </p>\n            </div>\n            <div>\n                <a href='https://mobiforge.com/design-development/html5-pointer-events-api-combining-touch-mouse-and-pen'\n                    target='_blank'\n                    rel=\"noopener noreferrer\"\n                >\n                    for more details about pointer events click here\n                </a>\n            </div>\n\n            <table className='table table-bordered table-hover table-condensed table-striped my-3' >\n                <tbody>\n                    <tr>\n                        <th>Property</th>\n                        <th>Value</th>\n                    </tr>\n                    {Object.keys(state).map(key =>\n                        (typeof (state[key]) !== 'object' && typeof (state[key]) !== 'function') ?\n                            <tr key={key}>\n                                <td>{key}</td>\n                                <td>{String(state[key])}</td>\n                                {console.log(key, state[key])}\n                            </tr> : null\n                    )}\n                </tbody>\n            </table>\n        </div >\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-primary p-2\">\n                <strong>Selection Events</strong>\n            </p>\n            <p>onSelect</p>\n            <p>Select below text box text to fire the onSelect event</p>\n            <input\n                onSelect={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onSelect events'\n            />\n            {isEventFired ?\n                (<p>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function UiEvents() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleScroll = (e) => {\n        e.persist();\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-primary p-2\">\n                <strong>UI Events</strong>\n            </p>\n            <p>onScroll</p>\n            <p>Scroll the below div to fire UI event (scroll event)</p>\n            <p>Wheel and Scroll events basically similar one, wheel event only fire when mouse scrolled, but sroll event fire using mouse wheel and also using mouse drag (both ways)</p>\n            <div\n                onScroll={handleScroll}\n                style={{ maxHeight: '150px', scrollBehavior: 'smooth', overflow: 'auto' }}>\n                <br />\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n                <br />\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </div>\n\n            {isEventFired ?\n                (<p className='my-3'>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function WheelEvents() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleEvent = (e) => {\n        e.persist();\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-primary p-2\">\n                <strong>UI Events</strong>\n            </p>\n            <p>onWheel</p>\n            <p>Scroll the below div using mouse wheel to fire the wheel event</p>\n            <p>Wheel and Scroll events basically similar one, wheel event only fire when mouse scrolled, but sroll event fire using mouse wheel and also using mouse drag (both ways)</p>\n            <div\n                onWheel={handleEvent}\n                style={{ maxHeight: '150px', scrollBehavior: 'smooth', overflow: 'auto' }}>\n                <br />\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n                <br />\n                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n            </div>\n\n            {isEventFired ?\n                (<p className='my-3'>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n// import ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n// import { Button } from 'react-bootstrap';\n// import Navbar from './components/Navbar';\n\nimport {\n  AllClipboard,\n  ImageEvents,\n  OnComposition,\n  OnCopy,\n  OnCut,\n  OnFocus,\n  OnKeyboard,\n  OnMouse,\n  OnPaste,\n  OnPointer,\n  OnSelect,\n  UiEvents,\n  WheelEvents\n} from \"./components\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container mb-5\">\n        <h3 className=\"text-center my-3\">React Synthetic Events</h3>\n        {/* <Navbar /> */}\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/OnCopy\">OnCopy</Link>\n            </li>\n            <li>\n              <Link to=\"/OnCut\">OnCut</Link>\n            </li>\n            <li>\n              <Link to=\"/OnPaste\">OnPaste</Link>\n            </li>\n            <li>\n              <Link to=\"/AllClipboard\">AllClipboards</Link>\n            </li>\n            <li>\n              <Link to=\"/OnPointer\">OnPointer</Link>\n            </li>\n            <li>\n              <Link to=\"/OnMouse\">OnMouse</Link>\n            </li>\n            <li>\n              <Link to=\"/OnKeyboard\">OnKeyboard</Link>\n            </li>\n            <li>\n              <Link to=\"/OnFocus\">OnFocus</Link>\n            </li>\n            <li>\n              <Link to=\"/OnComposition\">OnComposition</Link>\n            </li>\n            <li>\n              <Link to=\"/OnSelect\">OnSelect</Link>\n            </li>\n            <li>\n              <Link to=\"/UiEvents\">UiEvents</Link>\n            </li>\n            <li>\n              <Link to=\"/WheelEvents\">WheelEvents</Link>\n            </li>\n            <li>\n              <Link to=\"/ImageEvents\">ImageEvents</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/OnCopy\">\n            <OnCopy />\n          </Route>\n          <Route path=\"/OnCut\">\n            <OnCut />\n          </Route>\n          <Route path=\"/OnPaste\">\n            <OnPaste />\n          </Route>\n          <Route path=\"/AllClipboard\">\n            <AllClipboard />\n          </Route>\n          <Route path=\"/OnPointer\">\n            <OnPointer />\n          </Route>\n          <Route path=\"/OnMouse\">\n            <OnMouse />\n          </Route>\n          <Route path=\"/OnKeyboard\">\n            <OnKeyboard />\n          </Route>\n          <Route path=\"/OnFocus\">\n            <OnFocus />\n          </Route>\n          <Route path=\"/OnComposition\">\n            <OnComposition />\n          </Route>\n          <Route path=\"/OnSelect\">\n            <OnSelect />\n          </Route>\n          <Route path=\"/UiEvents\">\n            <UiEvents />\n          </Route>\n          <Route path=\"/WheelEvents\">\n            <WheelEvents />\n          </Route>\n          <Route path=\"/ImageEvents\">\n            <ImageEvents />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}