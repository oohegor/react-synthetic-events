{"version":3,"sources":["components/OnCopy.js","components/OnCut.js","components/OnPaste.js","components/AllClipboard.js","components/OnPointer.js","components/OnMouse.js","components/OnKeyboard.js","components/OnFocus.js","components/OnComposition.js","App.js","serviceWorker.js","index.js"],"names":["OnCopy","useState","copiedText","setCopiedText","isCopied","onCopy","handleOnCopy","e","a","console","log","type","setTimeout","navigator","clipboard","readText","then","text","catch","err","style","minHeight","className","color","OnCut","cuttedText","setCuttedText","isCutted","onCut","handleOnCut","clipboardData","width","defaultValue","OnPaste","pastedText","setPastedText","isPasted","onPaste","AllClipboard","eventText","setEentText","eventType","seteventType","isEventFired","setIsEventFired","persist","cols","rows","OnPointer","state","setstate","handleAction","src","alt","onPointerDown","onPointerMove","onPointerUp","onPointerCancel","onGotPointerCapture","onLostPointerCapture","onPointerEnter","onPointerLeave","onPointerOver","onPointerOut","href","target","rel","Object","keys","map","key","String","OnMouse","onClick","onContextMenu","onDoubleClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onKeyDown","onKeyPress","onKeyUp","onFocus","onBlur","onCompositionStart","onCompositionUpdate","onCompositionEnd","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b775ce0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function OnCopy() {\n    const [copiedText, setCopiedText] = useState('');\n    const [isCopied, onCopy] = useState(false);\n\n    const handleOnCopy = async (e) => {\n        console.log('type =>', e.type);\n        onCopy(true);\n        setTimeout(() => {\n            onCopy(false);\n        }, 3000);\n        navigator.clipboard.readText()\n            .then(text => {\n                // `text` contains the text read from the clipboard\n                console.log('copied text =>', text);\n                setCopiedText(text);\n            })\n            .catch(err => {\n                // maybe user didn't grant access to read from clipboard\n                console.log('Something went wrong', err);\n            });\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\"><strong>onCopy</strong> Event</p>\n            <h4 onCopy={handleOnCopy}>Copy part or full of this string and see copied text below</h4>\n            {isCopied ?\n                (<p>Copied Text -> <span style={{ color: 'red' }}>{copiedText}</span></p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnCut() {\n    const [cuttedText, setCuttedText] = useState('');\n    const [isCutted, onCut] = useState(false);\n\n    const handleOnCut = async (e) => {\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        onCut(true);\n        setTimeout(() => {\n            onCut(false);\n        }, 5000);\n        navigator.clipboard.readText()\n            .then(text => {\n                // `text` contains the text read from the clipboard\n                console.log('copied text =>', text);\n                setCuttedText(text);\n            })\n            .catch(err => {\n                // maybe user didn't grant access to read from clipboard\n                console.log('Something went wrong', err);\n            });\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\"><strong>OnCut</strong> Event</p>\n            <input onCut={handleOnCut} type='text' style={{ width: '100%' }} defaultValue='Cut part or full of this string and see copied text below' />\n            {isCutted ?\n                (<p>Cutted Text -> <span style={{ color: 'red' }}>{cuttedText}</span></p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnPaste() {\n    const [pastedText, setPastedText] = useState('');\n    const [isPasted, OnPaste] = useState(false);\n\n    const handleOnCut = async (e) => {\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        OnPaste(true);\n        setTimeout(() => {\n            OnPaste(false);\n        }, 5000);\n        navigator.clipboard.readText()\n            .then(text => {\n                // `text` contains the text read from the clipboard\n                console.log('copied text =>', text);\n                setPastedText(text);\n            })\n            .catch(err => {\n                // maybe user didn't grant access to read from clipboard\n                console.log('Something went wrong', err);\n            });\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\"><strong>OnPaste</strong> Event</p>\n            <input onPaste={handleOnCut} type='text' style={{ width: '100%' }} defaultValue='Paste part or full of this string and see copied text below' />\n            {isPasted ?\n                (<p>Pasted Text -> <span style={{ color: 'red' }}>{pastedText}</span></p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventText, setEentText] = useState('');\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        console.log({ e });\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n        navigator.clipboard.readText()\n            .then(text => {\n                // `text` contains the text read from the clipboard\n                console.log('copied text =>', text);\n                setEentText(text);\n            })\n            .catch(err => {\n                // maybe user didn't grant access to read from clipboard\n                console.log('Something went wrong', err);\n            });\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\"><strong>OnCopy, OnCut, OnPaste</strong> Events</p>\n            <textarea onCopy={handleOnCut} onCut={handleOnCut} onPaste={handleOnCut} cols={100} rows={5} style={{ width: '100%' }} defaultValue='Paste part or full of this string and see copied text below' />\n            {isEventFired ?\n                (<p><span className='font-weight-bold'>{eventType}</span> Event fired -> <span style={{ color: 'red' }}>{eventText}</span></p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnPointer() {\n\n    const [state, setstate] = useState({});\n\n    const handleAction = (e) => {\n        console.log({ e });\n        e.persist();\n        setstate(e);\n    };\n    return (\n        <div>\n            <p className=\"bg-success p-2 mt-5\"><strong>onPointer</strong> Event</p>\n            <div className='text-center'>\n                <img src='https://www.w3.org/TR/pointerevents/pointer.png' alt='pointer-event' />\n            </div>\n            <p className='my-3 text-success'>\n                Click/touch below text to trigger pointer events\n            </p>\n            <div\n                onPointerDown={handleAction}\n                onPointerMove={handleAction}\n                onPointerUp={handleAction}\n                onPointerCancel={handleAction}\n                onGotPointerCapture={handleAction}\n                onLostPointerCapture={handleAction}\n                onPointerEnter={handleAction}\n                onPointerLeave={handleAction}\n                onPointerOver={handleAction}\n                onPointerOut={handleAction}\n            >\n                <p>\n                    The Pointer Events API is an HTML5 specification that combines touch, mouse, pen and other inputs into a single unified API.\n                </p>\n                <p>\n                    The simple idea behind it, is that mouse and touch and stylus input events are unified into a single event API.\n                </p>\n                <p className='font-weight-bold'>\n                    List of available pointer events\n                </p>\n                <p>\n                    onPointerDownonPointerMove, onPointerUp, onPointerCancel, onGotPointerCapture,\n                    onLostPointerCapture, onPointerEnter, onPointerLeave, onPointerOver, onPointerOut\n                </p>\n            </div>\n            <div>\n                <a href='https://mobiforge.com/design-development/html5-pointer-events-api-combining-touch-mouse-and-pen'\n                    target='_blank'\n                    rel=\"noopener noreferrer\"\n                >\n                    for more details about pointer events click here\n                </a>\n            </div>\n\n            <table className='table table-bordered table-hover table-condensed table-striped my-3' >\n                <tbody>\n                    <tr>\n                        <th>Property</th>\n                        <th>Value</th>\n                    </tr>\n                    {Object.keys(state).map(key =>\n                        (typeof (state[key]) !== 'object' && typeof (state[key]) !== 'function') ?\n                            <tr key={key}>\n                                <td>{key}</td>\n                                <td>{String(state[key])}</td>\n                                {console.log(key, state[key])}\n                            </tr> : null\n                    )}\n                </tbody>\n            </table>\n        </div >\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function OnMouse() {\n\n    const [state, setstate] = useState({});\n\n    const handleAction = (e) => {\n        console.log({ e });\n        e.persist();\n        setstate(e);\n    };\n    return (\n        <div>\n            <p className=\"bg-success p-2 mt-5\"><strong>onMouse</strong> Event</p>\n            <div>\n                <p className='font-weight-bold'>\n                    List of available mouse events\n                </p>\n                <p>\n                    onClick, onContextMenu, onDoubleClick, onDrag, onDragEnd, onDragEnter, onDragExit,\n                    onDragLeave, onDragOver, onDragStart, onDrop, onMouseDown, onMouseEnter, onMouseLeave,\n                    onMouseMove, onMouseOut, onMouseOver, onMouseUp\n                </p>\n            </div>\n            <p className='my-3 text-success'>\n                Click/touch below text to trigger mouse events\n            </p>\n\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p onClick={handleAction}>onClick event</p>\n                    <p onContextMenu={handleAction}>onContextMenu event</p>\n                    <p onDoubleClick={handleAction}>onDoubleClick event</p>\n                    <p onDrag={handleAction}>onDrag event</p>\n                    <p onDragEnd={handleAction}>onDragEnd event</p>\n                    <p onDragEnter={handleAction}>onDragEnter event</p>\n                    <p onDragExit={handleAction}>onDragExit event</p>\n                    <p onDragLeave={handleAction}>onDragLeave event</p>\n                    <p onDragOver={handleAction}>onDragOver event</p>\n                    <p onDragStart={handleAction}>onDragStart event</p>\n                    <p onDrop={handleAction}>onDrop event</p>\n                    <p onMouseDown={handleAction}>onMouseDown event</p>\n                    <p onMouseEnter={handleAction}>onMouseEnter event</p>\n                    <p onMouseLeave={handleAction}>onMouseLeave event</p>\n                    <p onMouseMove={handleAction}>onMouseMove event</p>\n                    <p onMouseOut={handleAction}>onMouseOut event</p>\n                    <p onMouseOver={handleAction}>onMouseOver event</p>\n                    <p onMouseUp={handleAction}>onMouseUp event</p>\n                </div>\n                <div className=\"col\">\n                    <table className='table table-bordered table-hover table-condensed table-striped my-3' >\n                        <tbody>\n                            <tr>\n                                <th>Property</th>\n                                <th>Value</th>\n                            </tr>\n                            {Object.keys(state).map(key =>\n                                (typeof (state[key]) !== 'object' && typeof (state[key]) !== 'function') ?\n                                    <tr key={key}>\n                                        <td>{key}</td>\n                                        <td>{String(state[key])}</td>\n                                        {console.log(key, state[key])}\n                                    </tr> : null\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div >\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        console.log({ e });\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div style={{ minHeight: '150px' }}>\n            <p className=\"bg-warning p-2\">\n                <strong>Keyboard Events</strong>\n            </p>\n            <p>onKeyDown, onKeyPress, onKeyUp</p>\n            <input\n                onKeyDown={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onKeyDown events'\n            />\n            <input\n                onKeyPress={handleOnCut}\n                onKeyUp={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onKeyPress onKeyUp events'\n            />\n            {isEventFired ?\n                (<p>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        console.log({ e });\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('type =>', e.clipboardData);\n        console.log('type =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-primary p-2\">\n                <strong>Focus Events</strong>\n            </p>\n            <p>onFocus, onBlur</p>\n            <input\n                onFocus={handleOnCut}\n                onBlur={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onFocus onBlur events'\n            />\n            {isEventFired ?\n                (<p>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function AllClipboard() {\n    const [eventType, seteventType] = useState('');\n    const [isEventFired, setIsEventFired] = useState(false);\n\n    const handleOnCut = (e) => {\n        e.persist();\n        seteventType(e.type);\n        console.log('type =>', e.type);\n        console.log('e =>', e);\n        setIsEventFired(true);\n        setTimeout(() => {\n            setIsEventFired(false);\n        }, 5000);\n    };\n\n    return (\n        <div className='my-5' style={{ minHeight: '150px' }}>\n            <p className=\"bg-success p-2\">\n                <strong>Composition Events</strong>\n            </p>\n            <p>Composition events fire for non-latin character typing e.g (Tamil, Chinese, japanese, etc..)</p>\n            <p>onCompositionEnd, onCompositionStart, onCompositionUpdate</p>\n            <div>\n                <a href='https://blog.evanyou.me/2014/01/03/composition-event/'\n                    target='_blank'\n                    rel=\"noopener noreferrer\"\n                >\n                    for more details about composition events click here\n                </a>\n            </div>\n            <div className='text-center'>\n                <img src='https://i.stack.imgur.com/7D5U0.gif' alt='composition-event' />\n            </div>\n            <p>Type non-latin characters to fire the Composition events</p>\n            <input\n                onCompositionStart={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onCompositionStart ஆரம்பம்'\n            />\n            <input\n                onCompositionUpdate={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onCompositionUpdate மாறுதல்கள்'\n            />\n            <input\n                onCompositionEnd={handleOnCut}\n                type='text'\n                style={{ width: '100%' }}\n                defaultValue='onCompositionEnd இறுதி'\n            />\n            {isEventFired ?\n                (<p>\n                    <span className='font-weight-bold'>{eventType}</span> Event fired\n                </p>) : (null)\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\n// import ButtonToolbar from 'react-bootstrap/ButtonToolbar';\n// import { Button } from 'react-bootstrap';\n// import Navbar from './components/Navbar';\nimport OnCopy from './components/OnCopy';\nimport OnCut from './components/OnCut';\nimport OnPaste from './components/OnPaste';\nimport AllClipboard from './components/AllClipboard';\nimport OnPointer from './components/OnPointer';\nimport OnMouse from './components/OnMouse';\nimport OnKeyboard from './components/OnKeyboard';\nimport OnFocus from './components/OnFocus';\nimport OnComposition from './components/OnComposition';\n\n\nfunction App() {\n  return (\n    <div className=\"container mb-5\">\n      <h3 className=\"text-center my-3\">React Synthetic Events</h3>\n      <OnCopy />\n      <OnCut />\n      <OnPaste />\n      <AllClipboard />\n      <OnPointer />\n      <OnMouse />\n      <OnKeyboard />\n      <OnFocus />\n      <OnComposition />\n\n      {/* <Navbar /> */}\n      {/* <ButtonToolbar>\n        <Button variant=\"primary\">Primary</Button>\n        <Button variant=\"secondary\">Secondary</Button>\n        <Button variant=\"success\">Success</Button>\n        <Button variant=\"warning\">Warning</Button>\n        <Button variant=\"danger\">Danger</Button>\n        <Button variant=\"info\">Info</Button>\n        <Button variant=\"light\">Light</Button>\n        <Button variant=\"dark\">Dark</Button>\n        <Button variant=\"link\">Link</Button>\n      </ButtonToolbar> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}